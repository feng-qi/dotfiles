* SPC
** SPC
Jump to word
** TAB
Previous buffer visible in woindow
** !
Run shell command
** '
Pop up shell
** * /
Search in project
/: the word under cursor is searched automatically.
** 0,1,...,9
Jump to window
** :
Run M-x
** ;
Comment operator
ip: comment out paragraph
ii: comment out the indented
** ?
Helm session with keybindings
** ` (C-o)
Skip backwards in avy jump list
** F1
Fuzzy search among... things... Emacs things
** a: Application
*** c: Calculator
*** d: Deer (file tree navigator) need ranger mode)
*** E: Emojis (need emoji layer)
*** G: Games (need games layer)
*** i: IRC (need erc layer)
*** m: Music (need Spotify layer)
*** o: Org
*** P: Processes
*** r: Ranger (need ranger mode)
*** s: Shells to choose (SPE ' for default shell)
*** u: Undo tree visualize
** b: Buffers
*** .: (buffer-micro-state): switch through buffers and may kill them
*** b: (helm-mini): choose buffers
**** C-z: options
**** C-c C-f: preview buffer
*** B: ibuffer (need _bb-ibuffer_ layer)
*** d: Delete buffer
*** e: Erase buffer contents
*** h: Go to Spacemacs home
*** k: Kill buffer with ido
*** K: Kill all other buffers
*** m: Move buffer across windows
*** M: Ace swap buffer in windows
*** n/p: Next or previous (useful) buffer
*** P/Y: Paste/Copy clipboard to/from buffer
*** R: Revert to original file
*** s: Switch to scratch buffer
*** w: Toggle read only
*** C-k: Kill buffers whose name matches regex
** c: Compilation & commenting
*** c: Helm compile
*** C: Compile
*** r: Recompile
*** l/L: Comment line (or invert)
*** p/P: Comment paragraph (or invert)
*** t/T: Comment to the line (or invert)
*** y/Y: Copy and comment
** C: Capture and colors
*** c: Org capture (see also SPC aoc)
*** l: Helm colors
*** t/T: Ort capture
** e: Errors (needs syntax-checking layer)
*** h: Describe syntax checker
*** l: Toggle error list buffer
*** n/N/P: Jump between errors
Consider using [l and ]l from the unimpaired layer
*** s, S: Select checker (and executable)
*** v: Veryfy flycheck setup
** f: Files
*** a: FASD
**** d: Directories
**** f: Files
**** s: Files and directories
*** c: Write buffer to new filename
*** C: Convert line endings
**** d: To DOS
**** u: To UNIX
*** D: Delete buffer and file
*** e: Emacs configuration-related stuff
**** d: Go to spacemacs dotfile
**** D: Ediff dotfile changes
**** f: Spacemacs FAQ helm source
**** h: Spacemacs helm (like all documents?!)
**** i: Spacemacs user init file
**** R: Synchronize dotfile (source dotfile)
**** v: Show and copy Spacemacs version
*** f: Find files
*** F: Find files at cursor
*** g: Grep
*** j: Open dired and move point to given file
*** J: Open junk file
*** l: Open file literally (no extra feature/mode enabled)
*** L: Locate
**** -b: use base name(literally)
*** o: Open in external app
*** r: Recent files
*** R: Rename file
*** s: Write to file (save file)
*** S: Write all buffers to files (save all files)
*** t: Neotree (directory tree)
*** v: Variables
**** d: Add directory local variable
**** f: Add file local variable
**** p: Add file local variable (alternative format)
*** y: Show and copy file name
** g: Git
*** .: VCS microstatus (need version-control layer)
*** b: Git blame microstate
*** c: Git commit
*** C: Git checkout
*** d: Git diff
*** D: Git diff between HEAD and working tree
*** e: Ediff
*** e: Ediff between HEAD and working tree
*** f: Git fetch
*** F: Git pull
*** g: Gists (need github layer)
**** b/B: Buffer (private)
**** l: List gists
**** r/R: Region (private)
*** h: Github
**** c/C: Go to (or copy) github URL to commit at point (by hash)
**** l/L: Go to (or copy) github URL to point
**** o: Open file in github
**** C-c: Clone github repo
*** H: Highlight
**** c: Clear
**** h: By age of change
**** t: By last update time
*** i: Git init
*** I: Git ignore patterns
*** l: Git log
*** L: Git log for current file
*** m: Show last commit message at point
*** P: Push
*** s: Magit status
*** S/U: Stage or unstage whole file
*** t: Git time-machine microstate
** h: Help
*** RET: Enable minor mode
*** SPC: Spacemacs helm (see also SPC feh)
*** b: Helm bookmarks
*** d: Describe
**** c: Character
**** f: Function
**** F: Face
**** k: Key
**** m: Mode
**** p: Package
**** s: System
**** t: Theme
**** v: Variable
*** i: Info at point
*** k: Which-key top level
*** l: Resume last helm session
*** L: Helm locate (elisp) library
*** m: Man pages
*** M: Helm switch major mode
*** T: Evil tutorial
** i: insert
*** e: Emojis (need emoji layer)
*** j,J,k,K: Insert line above or below
Consider using [-SPC and ]-SPC from unimpaired layer.
*** l: Lorem ipsum text (random text)
**** l: List items
**** p: Paragraphs
**** s: Sentences
*** s: Helm yasnippets
*** S: Auto-yasnippet
*** u: Helm unicode characters
** j: Join and split
*** =: Reindent
*** h/l: Pushes mark and go to beginning or end of line
*** j: Insert a newline
*** J: Split sexp and insert a newline
*** k: Go to next line and indent
*** o: Open new line above
** J: Split sexp (no newline)
** k: Evil lisp state
Works like a microstate
*** .: Enter lisp state without a command
*** $/0: End/beginning of sexp
*** (/): Insert sexp before or after (and leave lisp state)
*** `: Hybrid
**** k: Kill to end of line and leave parens balanced
**** p: Push hybrid sexp
**** s: Slurp hybrid sexp
**** t: Transpose hybrid sexp
*** a: absorb sexp
*** b, B: Barf forward or backward
*** c: Convolute sexps
*** d: Delete
**** s: Symbol
**** w: To end of word
**** x: sexp
*** D: Delete backward
**** s: Symbol
**** w: To end of word
**** x: sexp
*** e, E: Delete to end of sexp (forward and backward) and splice
*** h, l: Previous and next symbol (without regard for sexps)
*** H, L: Previous and next sexp (on the same level)
*** j, k: Next closing paren or previous opening paren
*** J: Join sexps before and after point
*** r: Raise sexp (substitute parent sexp with this one)
*** s, S: Slurp forward or backward
*** t: Transpose sexp (move sexp before previous one)
*** U: Go to beginning of parent sexp
*** w, W: Wrap or unwrap sexp in parens
*** y: Copy sexp
*** i, I, p, P, u, v, V, C-r, C-v, ESC: Do the same thing as in evil normal state
** l: Layouts
*** 0-9: Switch to layout by number
*** TAB: Switch to previous layout
*** a: Add a buffer to the current layout
*** A: Add all buffers to the current layout
*** b: List buffers in the current layout
*** c: Close layout (without killing buffers)
*** C: Close other layouts (without killing buffers)
*** h: Go to default layout
*** l: List layouts or create a new one
*** L: Load layouts from file
*** n, C-l: Next layout
*** N, p, C-h: Previous layout
*** o: Open a custom layout
*** r: Remove buffer from layout
*** R: Rename layout
*** s: Save all layouts to file
*** S: Save specific layouts to file
*** t: Show buffer without adding it to the layout
*** w: need eyebrowse
*** x; Kill layout (with buffers)
*** X; Kill other layouts (with buffers)
** n: Narrowing/numbers
*** +/=,-: Increase or decrease number at point
*** ,/.: Scroll by full pages
*** >/<: Scroll by half pages
*** f: Narrow to function
*** p: Narrow to page (Confuse user)
*** r: Narrow to region
*** w: Widen
** p: Projects
*** !: Run shell command in project root
*** &: Run asynchronous shell command in project root
*** a: Switch between implementation and test file
*** b: List buffers in project
*** c: Compile in project root
*** d: Directories in a project
*** D: Open direc/ranger in project root
*** f: Files in a project
*** G: Regenerate tags
*** h: Helm projectile (all in one)
*** I: Invalidate cache
*** k: Kill buffers in project
*** o: Projectile multi-occur (search in project buffers)
*** p: List of projects
*** r: Recent files in project
*** R: Project-wide search and replace
*** t: Neotree in project root
*** T: Find test file (cmp. SPC p a)
*** v: Open VC status window
*** y: Find tag
** q: Quitting
*** d: Restart Emacs with --debug-init
*** D: Restart Emacs with only selected packages
*** q: "Safe" quit (ask about changes)
*** Q: "Unsafe" quit (don't ask)
*** r: Quit and restart, reopen buffers
*** R: Quit and restart
*** s: Save buffers and exit
*** z: Kill frame(leaving server on even if it kills the last frame)
